---
// Financial Calculator component
---

<section class="section-padding">
  <div class="container-custom mx-auto">
    <div class="text-center mb-16 observe-scroll">
      <h2 class="text-4xl lg:text-5xl font-bold mb-6">
        <span class="text-white">Financial</span>
        <span class="gradient-text"> Calculators</span>
      </h2>
      <p class="text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
        Plan your financial future with our comprehensive suite of Canadian financial calculators.
      </p>
    </div>

    <!-- Calculator Navigation Tabs -->
    <div class="mb-12">
      <div class="flex flex-wrap justify-center gap-2 mb-8">
        <button onclick="showCalculator('savings')" id="tab-savings" class="calculator-tab active px-6 py-3 rounded-lg font-medium transition-all duration-300">
          Savings
        </button>
        <button onclick="showCalculator('investment-income')" id="tab-investment-income" class="calculator-tab px-6 py-3 rounded-lg font-medium transition-all duration-300">
          Investment Income
        </button>
        <button onclick="showCalculator('tax-rates')" id="tab-tax-rates" class="calculator-tab px-6 py-3 rounded-lg font-medium transition-all duration-300">
          Tax Rates
        </button>
        <button onclick="showCalculator('rrsp-loan')" id="tab-rrsp-loan" class="calculator-tab px-6 py-3 rounded-lg font-medium transition-all duration-300">
          RRSP Loan
        </button>
        <button onclick="showCalculator('loan-postponement')" id="tab-loan-postponement" class="calculator-tab px-6 py-3 rounded-lg font-medium transition-all duration-300">
          Loan Postponement
        </button>
        <button onclick="showCalculator('inflation')" id="tab-inflation" class="calculator-tab px-6 py-3 rounded-lg font-medium transition-all duration-300">
          Inflation
        </button>
        <button onclick="showCalculator('rrsp-tax-savings')" id="tab-rrsp-tax-savings" class="calculator-tab px-6 py-3 rounded-lg font-medium transition-all duration-300">
          RRSP Tax Savings
        </button>
      </div>
    </div>

    <!-- Savings Calculator -->
    <div id="calculator-savings" class="calculator-content">
      <div class="glass-effect p-8 rounded-2xl border border-white/10 observe-scroll">
        <h3 class="text-2xl font-bold text-white mb-6 flex items-center">
          <svg class="w-8 h-8 text-teal-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
          </svg>
          Savings Calculator
        </h3>
        <div class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Starting Balance ($)</label>
              <input type="number" id="savings-starting-balance" value="10000" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-teal-500 focus:ring-2 focus:ring-teal-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Annual Interest Rate (%)</label>
              <input type="number" id="savings-interest-rate" value="3.5" step="0.1" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-teal-500 focus:ring-2 focus:ring-teal-500/20 transition-all duration-300">
            </div>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Regular Contribution ($)</label>
              <input type="number" id="savings-contribution" value="500" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-teal-500 focus:ring-2 focus:ring-teal-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Contribution Frequency</label>
              <select id="savings-frequency" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-teal-500 focus:ring-2 focus:ring-teal-500/20 transition-all duration-300">
                <option value="12">Monthly</option>
                <option value="26">Bi-weekly</option>
                <option value="52">Weekly</option>
                <option value="4">Quarterly</option>
                <option value="1">Annually</option>
              </select>
            </div>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Number of Years</label>
              <input type="number" id="savings-years" value="20" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-teal-500 focus:ring-2 focus:ring-teal-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Compounding Frequency</label>
              <select id="savings-compounding" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-teal-500 focus:ring-2 focus:ring-teal-500/20 transition-all duration-300">
                <option value="12">Monthly</option>
                <option value="4">Quarterly</option>
                <option value="2">Semi-annually</option>
                <option value="1">Annually</option>
                <option value="365">Daily</option>
              </select>
            </div>
          </div>

          <button onclick="calculateSavings()" class="w-full py-4 text-lg bg-gradient-to-r from-teal-600 to-teal-500 hover:from-teal-500 hover:to-teal-400 text-white rounded-lg font-medium transition-all duration-300 transform hover:scale-105">
            Calculate Savings Growth
          </button>

          <div id="savings-result" class="hidden mt-6 p-6 bg-gradient-to-r from-teal-500/10 to-yellow-500/10 border border-teal-500/30 rounded-lg">
            <h4 class="text-lg font-semibold text-white mb-4">Your Savings Projection</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Future Value</div>
                <div id="savings-future-value" class="text-teal-400 font-bold text-2xl"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Total Contributions</div>
                <div id="savings-total-contributions" class="text-yellow-400 font-bold text-2xl"></div>
              </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Interest Earned</div>
                <div id="savings-interest-earned" class="text-green-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Effective Annual Rate</div>
                <div id="savings-effective-rate" class="text-blue-400 font-bold text-lg"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Investment Income Calculator -->
    <div id="calculator-investment-income" class="calculator-content hidden">
      <div class="glass-effect p-8 rounded-2xl border border-white/10 observe-scroll">
        <h3 class="text-2xl font-bold text-white mb-6 flex items-center">
          <svg class="w-8 h-8 text-yellow-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
          </svg>
          Investment Income Calculator
        </h3>
        <div class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Investment Amount ($)</label>
              <input type="number" id="investment-amount" value="100000" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:ring-2 focus:ring-yellow-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Annual Dividend Yield (%)</label>
              <input type="number" id="dividend-yield" value="4.5" step="0.1" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:ring-2 focus:ring-yellow-500/20 transition-all duration-300">
            </div>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Dividend Frequency</label>
              <select id="dividend-frequency" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:ring-2 focus:ring-yellow-500/20 transition-all duration-300">
                <option value="4">Quarterly</option>
                <option value="12">Monthly</option>
                <option value="2">Semi-annually</option>
                <option value="1">Annually</option>
              </select>
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Expected Capital Gains (%)</label>
              <input type="number" id="capital-gains" value="6" step="0.1" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:ring-2 focus:ring-yellow-500/20 transition-all duration-300">
            </div>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Marginal Tax Rate (%)</label>
              <input type="number" id="tax-rate" value="30" step="0.1" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:ring-2 focus:ring-yellow-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Province</label>
              <select id="province" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-yellow-500 focus:ring-2 focus:ring-yellow-500/20 transition-all duration-300">
                <option value="BC">British Columbia</option>
                <option value="AB">Alberta</option>
                <option value="ON">Ontario</option>
                <option value="QC">Quebec</option>
                <option value="NS">Nova Scotia</option>
                <option value="NB">New Brunswick</option>
                <option value="MB">Manitoba</option>
                <option value="SK">Saskatchewan</option>
                <option value="PE">Prince Edward Island</option>
                <option value="NL">Newfoundland and Labrador</option>
                <option value="YT">Yukon</option>
                <option value="NT">Northwest Territories</option>
                <option value="NU">Nunavut</option>
              </select>
            </div>
          </div>

          <button onclick="calculateInvestmentIncome()" class="w-full py-4 text-lg bg-gradient-to-r from-yellow-600 to-yellow-500 hover:from-yellow-500 hover:to-yellow-400 text-black rounded-lg font-medium transition-all duration-300 transform hover:scale-105">
            Calculate Investment Income
          </button>

          <div id="investment-income-result" class="hidden mt-6 p-6 bg-gradient-to-r from-yellow-500/10 to-teal-500/10 border border-yellow-500/30 rounded-lg">
            <h4 class="text-lg font-semibold text-white mb-4">Your Investment Income Projection</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Annual Dividend Income</div>
                <div id="annual-dividend-income" class="text-yellow-400 font-bold text-2xl"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Monthly Dividend Income</div>
                <div id="monthly-dividend-income" class="text-green-400 font-bold text-2xl"></div>
              </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">After-Tax Dividend Income</div>
                <div id="after-tax-dividend" class="text-teal-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Total Annual Return</div>
                <div id="total-annual-return" class="text-purple-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Dividend Tax Credit</div>
                <div id="dividend-tax-credit" class="text-blue-400 font-bold text-lg"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Tax Rates Calculator -->
    <div id="calculator-tax-rates" class="calculator-content hidden">
      <div class="glass-effect p-8 rounded-2xl border border-white/10 observe-scroll">
        <h3 class="text-2xl font-bold text-white mb-6 flex items-center">
          <svg class="w-8 h-8 text-red-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
          </svg>
          Tax Rates Calculator
        </h3>
        <div class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Annual Taxable Income ($)</label>
              <input type="number" id="taxable-income" value="85000" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:ring-2 focus:ring-red-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Province/Territory</label>
              <select id="tax-province" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:ring-2 focus:ring-red-500/20 transition-all duration-300">
                <option value="BC">British Columbia</option>
                <option value="AB">Alberta</option>
                <option value="ON">Ontario</option>
                <option value="QC">Quebec</option>
                <option value="NS">Nova Scotia</option>
                <option value="NB">New Brunswick</option>
                <option value="MB">Manitoba</option>
                <option value="SK">Saskatchewan</option>
                <option value="PE">Prince Edward Island</option>
                <option value="NL">Newfoundland and Labrador</option>
                <option value="YT">Yukon</option>
                <option value="NT">Northwest Territories</option>
                <option value="NU">Nunavut</option>
              </select>
            </div>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">RRSP Contributions ($)</label>
              <input type="number" id="rrsp-contributions" value="15000" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:ring-2 focus:ring-red-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Other Deductions ($)</label>
              <input type="number" id="other-deductions" value="5000" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-red-500 focus:ring-2 focus:ring-red-500/20 transition-all duration-300">
            </div>
          </div>
          <button onclick="calculateTaxes()" class="w-full py-4 text-lg bg-gradient-to-r from-red-600 to-red-500 hover:from-red-500 hover:to-red-400 text-white rounded-lg font-medium transition-all duration-300 transform hover:scale-105">
            Calculate Tax Liability
          </button>
          <div id="tax-result" class="hidden mt-6 p-6 bg-gradient-to-r from-red-500/10 to-orange-500/10 border border-red-500/30 rounded-lg">
            <h4 class="text-lg font-semibold text-white mb-4">Your Tax Calculation</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Total Tax Owing</div>
                <div id="total-tax" class="text-red-400 font-bold text-2xl"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">After-Tax Income</div>
                <div id="after-tax-income" class="text-green-400 font-bold text-2xl"></div>
              </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Federal Tax</div>
                <div id="federal-tax" class="text-blue-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Provincial Tax</div>
                <div id="provincial-tax" class="text-yellow-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Marginal Rate</div>
                <div id="marginal-rate" class="text-purple-400 font-bold text-lg"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- RRSP Loan Calculator -->
    <div id="calculator-rrsp-loan" class="calculator-content hidden">
      <div class="glass-effect p-8 rounded-2xl border border-white/10 observe-scroll">
        <h3 class="text-2xl font-bold text-white mb-6 flex items-center">
          <svg class="w-8 h-8 text-purple-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
          </svg>
          RRSP Loan Calculator
        </h3>
        <div class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">RRSP Contribution Amount ($)</label>
              <input type="number" id="rrsp-loan-amount" value="25000" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Loan Interest Rate (%)</label>
              <input type="number" id="loan-interest-rate" value="6.5" step="0.1" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300">
            </div>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Loan Term (Years)</label>
              <input type="number" id="loan-term-years" value="3" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Marginal Tax Rate (%)</label>
              <input type="number" id="rrsp-marginal-rate" value="35" step="0.1" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300">
            </div>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Expected RRSP Return (%)</label>
              <input type="number" id="rrsp-return-rate" value="7" step="0.1" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300">
            </div>
            <div></div>
          </div>
          <button onclick="calculateRRSPLoan()" class="w-full py-4 text-lg bg-gradient-to-r from-purple-600 to-purple-500 hover:from-purple-500 hover:to-purple-400 text-white rounded-lg font-medium transition-all duration-300 transform hover:scale-105">
            Calculate RRSP Loan Benefit
          </button>
          <div id="rrsp-loan-result" class="hidden mt-6 p-6 bg-gradient-to-r from-purple-500/10 to-blue-500/10 border border-purple-500/30 rounded-lg">
            <h4 class="text-lg font-semibold text-white mb-4">RRSP Loan Analysis</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Immediate Tax Refund</div>
                <div id="tax-refund" class="text-green-400 font-bold text-2xl"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Monthly Loan Payment</div>
                <div id="monthly-loan-payment" class="text-purple-400 font-bold text-2xl"></div>
              </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Total Interest Cost</div>
                <div id="total-interest-cost" class="text-red-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Net Benefit</div>
                <div id="net-benefit" class="text-yellow-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Break-Even Rate</div>
                <div id="break-even-rate" class="text-blue-400 font-bold text-lg"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Loan Investment Postponement Calculator -->
    <div id="calculator-loan-postponement" class="calculator-content hidden">
      <div class="glass-effect p-8 rounded-2xl border border-white/10 observe-scroll">
        <h3 class="text-2xl font-bold text-white mb-6 flex items-center">
          <svg class="w-8 h-8 text-orange-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          Loan Investment Postponement Calculator
        </h3>
        <div class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Original Loan Balance ($)</label>
              <input type="number" id="original-loan-balance" value="250000" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-orange-500 focus:ring-2 focus:ring-orange-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Interest Rate (%)</label>
              <input type="number" id="postponement-interest-rate" value="5.25" step="0.01" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-orange-500 focus:ring-2 focus:ring-orange-500/20 transition-all duration-300">
            </div>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Original Monthly Payment ($)</label>
              <input type="number" id="original-payment" value="1500" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-orange-500 focus:ring-2 focus:ring-orange-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Deferment Period (Months)</label>
              <input type="number" id="deferment-months" value="6" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-orange-500 focus:ring-2 focus:ring-orange-500/20 transition-all duration-300">
            </div>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Remaining Term (Years)</label>
              <input type="number" id="remaining-term" value="20" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-orange-500 focus:ring-2 focus:ring-orange-500/20 transition-all duration-300">
            </div>
            <div></div>
          </div>
          <button onclick="calculateLoanPostponement()" class="w-full py-4 text-lg bg-gradient-to-r from-orange-600 to-orange-500 hover:from-orange-500 hover:to-orange-400 text-white rounded-lg font-medium transition-all duration-300 transform hover:scale-105">
            Calculate Postponement Impact
          </button>
          <div id="loan-postponement-result" class="hidden mt-6 p-6 bg-gradient-to-r from-orange-500/10 to-red-500/10 border border-orange-500/30 rounded-lg">
            <h4 class="text-lg font-semibold text-white mb-4">Postponement Analysis</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Deferred Interest</div>
                <div id="deferred-interest" class="text-orange-400 font-bold text-2xl"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">New Loan Balance</div>
                <div id="new-loan-balance" class="text-red-400 font-bold text-2xl"></div>
              </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">New Monthly Payment</div>
                <div id="new-monthly-payment" class="text-yellow-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Total Additional Cost</div>
                <div id="total-additional-cost" class="text-purple-400 font-bold text-lg"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Inflation Calculator -->
    <div id="calculator-inflation" class="calculator-content hidden">
      <div class="glass-effect p-8 rounded-2xl border border-white/10 observe-scroll">
        <h3 class="text-2xl font-bold text-white mb-6 flex items-center">
          <svg class="w-8 h-8 text-pink-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 17h8m0 0V9m0 8l-8-8-4 4-6-6"></path>
          </svg>
          Inflation Calculator
        </h3>
        <div class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Dollar Amount ($)</label>
              <input type="number" id="inflation-amount" value="10000" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-pink-500 focus:ring-2 focus:ring-pink-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Starting Year</label>
              <input type="number" id="starting-year" value="2000" min="1914" max="2025" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-pink-500 focus:ring-2 focus:ring-pink-500/20 transition-all duration-300">
            </div>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Ending Year</label>
              <input type="number" id="ending-year" value="2025" min="1914" max="2050" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-pink-500 focus:ring-2 focus:ring-pink-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Annual Inflation Rate (%)</label>
              <input type="number" id="inflation-rate" value="2.5" step="0.1" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-pink-500 focus:ring-2 focus:ring-pink-500/20 transition-all duration-300">
            </div>
          </div>
          <button onclick="calculateInflation()" class="w-full py-4 text-lg bg-gradient-to-r from-pink-600 to-pink-500 hover:from-pink-500 hover:to-pink-400 text-white rounded-lg font-medium transition-all duration-300 transform hover:scale-105">
            Calculate Inflation Impact
          </button>
          <div id="inflation-result" class="hidden mt-6 p-6 bg-gradient-to-r from-pink-500/10 to-purple-500/10 border border-pink-500/30 rounded-lg">
            <h4 class="text-lg font-semibold text-white mb-4">Inflation Analysis</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Current Purchasing Power</div>
                <div id="current-value" class="text-pink-400 font-bold text-2xl"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Purchasing Power Lost</div>
                <div id="purchasing-power-lost" class="text-red-400 font-bold text-2xl"></div>
              </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Total Inflation</div>
                <div id="total-inflation" class="text-yellow-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Average Annual Inflation</div>
                <div id="average-inflation" class="text-purple-400 font-bold text-lg"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- RRSP Tax Savings Calculator -->
    <div id="calculator-rrsp-tax-savings" class="calculator-content hidden">
      <div class="glass-effect p-8 rounded-2xl border border-white/10 observe-scroll">
        <h3 class="text-2xl font-bold text-white mb-6 flex items-center">
          <svg class="w-8 h-8 text-green-400 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
          </svg>
          RRSP Tax Savings Calculator
        </h3>
        <div class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Annual Income ($)</label>
              <input type="number" id="rrsp-annual-income" value="90000" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-green-500 focus:ring-2 focus:ring-green-500/20 transition-all duration-300">
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">RRSP Contribution ($)</label>
              <input type="number" id="rrsp-contribution-amount" value="16200" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-green-500 focus:ring-2 focus:ring-green-500/20 transition-all duration-300">
            </div>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Province/Territory</label>
              <select id="rrsp-province" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-green-500 focus:ring-2 focus:ring-green-500/20 transition-all duration-300">
                <option value="BC">British Columbia</option>
                <option value="AB">Alberta</option>
                <option value="ON">Ontario</option>
                <option value="QC">Quebec</option>
                <option value="NS">Nova Scotia</option>
                <option value="NB">New Brunswick</option>
                <option value="MB">Manitoba</option>
                <option value="SK">Saskatchewan</option>
                <option value="PE">Prince Edward Island</option>
                <option value="NL">Newfoundland and Labrador</option>
                <option value="YT">Yukon</option>
                <option value="NT">Northwest Territories</option>
                <option value="NU">Nunavut</option>
              </select>
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Available RRSP Room ($)</label>
              <input type="number" id="rrsp-room" value="25000" class="w-full px-4 py-3 bg-gray-800 border border-gray-600 rounded-lg text-white focus:border-green-500 focus:ring-2 focus:ring-green-500/20 transition-all duration-300">
            </div>
          </div>
          <button onclick="calculateRRSPTaxSavings()" class="w-full py-4 text-lg bg-gradient-to-r from-green-600 to-green-500 hover:from-green-500 hover:to-green-400 text-white rounded-lg font-medium transition-all duration-300 transform hover:scale-105">
            Calculate RRSP Tax Savings
          </button>
          <div id="rrsp-tax-savings-result" class="hidden mt-6 p-6 bg-gradient-to-r from-green-500/10 to-teal-500/10 border border-green-500/30 rounded-lg">
            <h4 class="text-lg font-semibold text-white mb-4">RRSP Tax Savings Analysis</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">Immediate Tax Savings</div>
                <div id="immediate-tax-savings" class="text-green-400 font-bold text-2xl"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg">
                <div class="text-sm text-gray-400 mb-1">New Marginal Tax Rate</div>
                <div id="new-marginal-rate" class="text-teal-400 font-bold text-2xl"></div>
              </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Optimal Contribution</div>
                <div id="optimal-contribution" class="text-yellow-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Remaining Room</div>
                <div id="remaining-room" class="text-blue-400 font-bold text-lg"></div>
              </div>
              <div class="bg-gray-800/50 p-4 rounded-lg text-center">
                <div class="text-sm text-gray-400 mb-1">Effective Tax Rate</div>
                <div id="effective-tax-rate" class="text-purple-400 font-bold text-lg"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .calculator-tab {
    @apply bg-gray-800 text-gray-300 hover:bg-gray-700 hover:text-white;
  }
  .calculator-tab.active {
    @apply bg-gradient-to-r from-teal-600 to-teal-500 text-white;
  }
  .calculator-content {
    display: block;
  }
  .calculator-content.hidden {
    display: none;
  }
</style>

<script is:inline>
  // Calculator Navigation
  function showCalculator(calculatorId) {
    // Hide all calculators
    const calculators = document.querySelectorAll('.calculator-content');
    calculators.forEach(calc => calc.classList.add('hidden'));

    // Remove active class from all tabs
    const tabs = document.querySelectorAll('.calculator-tab');
    tabs.forEach(tab => tab.classList.remove('active'));

    // Show selected calculator
    const selectedCalculator = document.getElementById(`calculator-${calculatorId}`);
    if (selectedCalculator) {
      selectedCalculator.classList.remove('hidden');
    }

    // Add active class to selected tab
    const selectedTab = document.getElementById(`tab-${calculatorId}`);
    if (selectedTab) {
      selectedTab.classList.add('active');
    }
  }

  // Utility functions
  function validateInput(value, fieldName, min = 0, max = Infinity) {
    if (isNaN(value) || value < min || value > max) {
      alert(`Please enter a valid ${fieldName} between ${min} and ${max}.`);
      return false;
    }
    return true;
  }

  function formatCurrency(amount) {
    return '$' + Math.round(amount).toLocaleString('en-US');
  }

  function formatPercentage(value, decimals = 1) {
    return value.toFixed(decimals) + '%';
  }

  // Tax bracket data for 2025 (simplified)
  const taxBrackets = {
    federal: [
      { min: 0, max: 55867, rate: 0.15 },
      { min: 55867, max: 111733, rate: 0.205 },
      { min: 111733, max: 173205, rate: 0.26 },
      { min: 173205, max: 246752, rate: 0.29 },
      { min: 246752, max: Infinity, rate: 0.33 }
    ],
    provincial: {
      BC: [
        { min: 0, max: 47937, rate: 0.0506 },
        { min: 47937, max: 95875, rate: 0.077 },
        { min: 95875, max: 110076, rate: 0.105 },
        { min: 110076, max: 133664, rate: 0.1229 },
        { min: 133664, max: 181232, rate: 0.147 },
        { min: 181232, max: Infinity, rate: 0.168 }
      ],
      ON: [
        { min: 0, max: 51446, rate: 0.0505 },
        { min: 51446, max: 102894, rate: 0.0915 },
        { min: 102894, max: 150000, rate: 0.1116 },
        { min: 150000, max: 220000, rate: 0.1216 },
        { min: 220000, max: Infinity, rate: 0.1316 }
      ],
      AB: [
        { min: 0, max: 148269, rate: 0.10 },
        { min: 148269, max: 177922, rate: 0.12 },
        { min: 177922, max: 237675, rate: 0.13 },
        { min: 237675, max: 355513, rate: 0.14 },
        { min: 355513, max: Infinity, rate: 0.15 }
      ]
      // Add other provinces as needed
    }
  };

  function calculateTax(income, province = 'BC') {
    let federalTax = 0;
    let provincialTax = 0;

    // Calculate federal tax
    for (const bracket of taxBrackets.federal) {
      if (income > bracket.min) {
        const taxableInBracket = Math.min(income, bracket.max) - bracket.min;
        federalTax += taxableInBracket * bracket.rate;
      }
    }

    // Calculate provincial tax
    const provincialBrackets = taxBrackets.provincial[province] || taxBrackets.provincial.BC;
    for (const bracket of provincialBrackets) {
      if (income > bracket.min) {
        const taxableInBracket = Math.min(income, bracket.max) - bracket.min;
        provincialTax += taxableInBracket * bracket.rate;
      }
    }

    return {
      federal: federalTax,
      provincial: provincialTax,
      total: federalTax + provincialTax
    };
  }

  function getMarginalTaxRate(income, province = 'BC') {
    // Find federal marginal rate
    let federalRate = 0;
    for (const bracket of taxBrackets.federal) {
      if (income > bracket.min && income <= bracket.max) {
        federalRate = bracket.rate;
        break;
      }
    }

    // Find provincial marginal rate
    let provincialRate = 0;
    const provincialBrackets = taxBrackets.provincial[province] || taxBrackets.provincial.BC;
    for (const bracket of provincialBrackets) {
      if (income > bracket.min && income <= bracket.max) {
        provincialRate = bracket.rate;
        break;
      }
    }

    return (federalRate + provincialRate) * 100;
  }

  // 1. Savings Calculator
  function calculateSavings() {
    try {
      const startingBalance = parseFloat(document.getElementById('savings-starting-balance').value) || 0;
      const interestRate = parseFloat(document.getElementById('savings-interest-rate').value) || 0;
      const contribution = parseFloat(document.getElementById('savings-contribution').value) || 0;
      const frequency = parseInt(document.getElementById('savings-frequency').value) || 12;
      const years = parseInt(document.getElementById('savings-years').value) || 1;
      const compounding = parseInt(document.getElementById('savings-compounding').value) || 12;

      if (!validateInput(startingBalance, 'starting balance', 0)) return;
      if (!validateInput(interestRate, 'interest rate', 0, 50)) return;
      if (!validateInput(contribution, 'contribution', 0)) return;
      if (!validateInput(years, 'years', 1, 100)) return;

      const r = interestRate / 100;
      const n = compounding;
      const t = years;
      const pmt = contribution * frequency;

      // Future value of initial principal
      const futureValuePrincipal = startingBalance * Math.pow(1 + r/n, n*t);

      // Future value of annuity (regular contributions)
      let futureValueAnnuity = 0;
      if (pmt > 0 && r > 0) {
        const periodicRate = r / frequency;
        const periods = frequency * t;
        futureValueAnnuity = pmt * ((Math.pow(1 + periodicRate, periods) - 1) / periodicRate);
      } else if (pmt > 0) {
        futureValueAnnuity = pmt * t;
      }

      const futureValue = futureValuePrincipal + futureValueAnnuity;
      const totalContributions = startingBalance + (pmt * t);
      const interestEarned = futureValue - totalContributions;
      const effectiveRate = totalContributions > 0 ? ((futureValue / totalContributions - 1) / t * 100) : 0;

      document.getElementById('savings-future-value').textContent = formatCurrency(futureValue);
      document.getElementById('savings-total-contributions').textContent = formatCurrency(totalContributions);
      document.getElementById('savings-interest-earned').textContent = formatCurrency(interestEarned);
      document.getElementById('savings-effective-rate').textContent = formatPercentage(effectiveRate);

      document.getElementById('savings-result').classList.remove('hidden');
    } catch (error) {
      alert('An error occurred while calculating. Please check your inputs and try again.');
      console.error('Savings calculation error:', error);
    }
  }

  // 2. Investment Income Calculator
  function calculateInvestmentIncome() {
    try {
      const investmentAmount = parseFloat(document.getElementById('investment-amount').value) || 0;
      const dividendYield = parseFloat(document.getElementById('dividend-yield').value) || 0;
      const capitalGains = parseFloat(document.getElementById('capital-gains').value) || 0;
      const taxRate = parseFloat(document.getElementById('tax-rate').value) || 0;

      if (!validateInput(investmentAmount, 'investment amount', 1)) return;
      if (!validateInput(dividendYield, 'dividend yield', 0, 50)) return;
      if (!validateInput(capitalGains, 'capital gains', 0, 50)) return;
      if (!validateInput(taxRate, 'tax rate', 0, 100)) return;

      const annualDividendIncome = investmentAmount * (dividendYield / 100);
      const monthlyDividendIncome = annualDividendIncome / 12;

      // Canadian dividend tax credit (simplified)
      const grossUpFactor = 1.38; // For eligible dividends
      const grossedUpDividend = annualDividendIncome * grossUpFactor;
      const dividendTaxCredit = grossedUpDividend * 0.25; // Simplified federal credit
      const dividendTax = Math.max(0, (grossedUpDividend * (taxRate / 100)) - dividendTaxCredit);
      const afterTaxDividend = annualDividendIncome - dividendTax;

      const totalAnnualReturn = dividendYield + capitalGains;

      document.getElementById('annual-dividend-income').textContent = formatCurrency(annualDividendIncome);
      document.getElementById('monthly-dividend-income').textContent = formatCurrency(monthlyDividendIncome);
      document.getElementById('after-tax-dividend').textContent = formatCurrency(afterTaxDividend);
      document.getElementById('total-annual-return').textContent = formatPercentage(totalAnnualReturn);
      document.getElementById('dividend-tax-credit').textContent = formatCurrency(dividendTaxCredit);

      document.getElementById('investment-income-result').classList.remove('hidden');
    } catch (error) {
      alert('An error occurred while calculating. Please check your inputs and try again.');
      console.error('Investment income calculation error:', error);
    }
  }

  // 3. Tax Rates Calculator
  function calculateTaxes() {
    try {
      const taxableIncome = parseFloat(document.getElementById('taxable-income').value) || 0;
      const province = document.getElementById('tax-province').value || 'BC';
      const rrspContributions = parseFloat(document.getElementById('rrsp-contributions').value) || 0;
      const otherDeductions = parseFloat(document.getElementById('other-deductions').value) || 0;

      if (!validateInput(taxableIncome, 'taxable income', 0)) return;
      if (!validateInput(rrspContributions, 'RRSP contributions', 0)) return;
      if (!validateInput(otherDeductions, 'other deductions', 0)) return;

      const adjustedIncome = Math.max(0, taxableIncome - rrspContributions - otherDeductions);
      const taxes = calculateTax(adjustedIncome, province);
      const afterTaxIncome = adjustedIncome - taxes.total;
      const marginalRate = getMarginalTaxRate(adjustedIncome, province);

      document.getElementById('total-tax').textContent = formatCurrency(taxes.total);
      document.getElementById('after-tax-income').textContent = formatCurrency(afterTaxIncome);
      document.getElementById('federal-tax').textContent = formatCurrency(taxes.federal);
      document.getElementById('provincial-tax').textContent = formatCurrency(taxes.provincial);
      document.getElementById('marginal-rate').textContent = formatPercentage(marginalRate);

      document.getElementById('tax-result').classList.remove('hidden');
    } catch (error) {
      alert('An error occurred while calculating. Please check your inputs and try again.');
      console.error('Tax calculation error:', error);
    }
  }

  // 4. RRSP Loan Calculator
  function calculateRRSPLoan() {
    try {
      const loanAmount = parseFloat(document.getElementById('rrsp-loan-amount').value) || 0;
      const loanRate = parseFloat(document.getElementById('loan-interest-rate').value) || 0;
      const loanTerm = parseInt(document.getElementById('loan-term-years').value) || 1;
      const marginalRate = parseFloat(document.getElementById('rrsp-marginal-rate').value) || 0;
      const rrspReturn = parseFloat(document.getElementById('rrsp-return-rate').value) || 0;

      if (!validateInput(loanAmount, 'loan amount', 1)) return;
      if (!validateInput(loanRate, 'loan interest rate', 0, 50)) return;
      if (!validateInput(loanTerm, 'loan term', 1, 10)) return;
      if (!validateInput(marginalRate, 'marginal tax rate', 0, 100)) return;
      if (!validateInput(rrspReturn, 'RRSP return', 0, 50)) return;

      const taxRefund = loanAmount * (marginalRate / 100);
      const monthlyRate = (loanRate / 100) / 12;
      const numberOfPayments = loanTerm * 12;

      let monthlyPayment = 0;
      if (monthlyRate > 0) {
        monthlyPayment = loanAmount * (monthlyRate * Math.pow(1 + monthlyRate, numberOfPayments)) / (Math.pow(1 + monthlyRate, numberOfPayments) - 1);
      } else {
        monthlyPayment = loanAmount / numberOfPayments;
      }

      const totalInterestCost = (monthlyPayment * numberOfPayments) - loanAmount;
      const rrspGrowth = loanAmount * (Math.pow(1 + (rrspReturn / 100), loanTerm) - 1);
      const netBenefit = taxRefund + rrspGrowth - totalInterestCost;
      const breakEvenRate = ((totalInterestCost - taxRefund) / loanAmount / loanTerm + 1) * 100;

      document.getElementById('tax-refund').textContent = formatCurrency(taxRefund);
      document.getElementById('monthly-loan-payment').textContent = formatCurrency(monthlyPayment);
      document.getElementById('total-interest-cost').textContent = formatCurrency(totalInterestCost);
      document.getElementById('net-benefit').textContent = formatCurrency(netBenefit);
      document.getElementById('break-even-rate').textContent = formatPercentage(breakEvenRate);

      document.getElementById('rrsp-loan-result').classList.remove('hidden');
    } catch (error) {
      alert('An error occurred while calculating. Please check your inputs and try again.');
      console.error('RRSP loan calculation error:', error);
    }
  }

  // 5. Loan Investment Postponement Calculator
  function calculateLoanPostponement() {
    try {
      const originalBalance = parseFloat(document.getElementById('original-loan-balance').value) || 0;
      const interestRate = parseFloat(document.getElementById('postponement-interest-rate').value) || 0;
      const originalPayment = parseFloat(document.getElementById('original-payment').value) || 0;
      const defermentMonths = parseInt(document.getElementById('deferment-months').value) || 0;
      const remainingTerm = parseInt(document.getElementById('remaining-term').value) || 20;

      if (!validateInput(originalBalance, 'original loan balance', 1)) return;
      if (!validateInput(interestRate, 'interest rate', 0, 50)) return;
      if (!validateInput(originalPayment, 'original payment', 1)) return;
      if (!validateInput(defermentMonths, 'deferment months', 1, 60)) return;
      if (!validateInput(remainingTerm, 'remaining term', 1, 50)) return;

      const monthlyRate = (interestRate / 100) / 12;
      const deferredInterest = originalBalance * monthlyRate * defermentMonths;
      const newLoanBalance = originalBalance + deferredInterest;

      const newTermMonths = remainingTerm * 12;
      let newMonthlyPayment = 0;
      if (monthlyRate > 0) {
        newMonthlyPayment = newLoanBalance * (monthlyRate * Math.pow(1 + monthlyRate, newTermMonths)) / (Math.pow(1 + monthlyRate, newTermMonths) - 1);
      } else {
        newMonthlyPayment = newLoanBalance / newTermMonths;
      }

      const totalAdditionalCost = deferredInterest + ((newMonthlyPayment - originalPayment) * newTermMonths);

      document.getElementById('deferred-interest').textContent = formatCurrency(deferredInterest);
      document.getElementById('new-loan-balance').textContent = formatCurrency(newLoanBalance);
      document.getElementById('new-monthly-payment').textContent = formatCurrency(newMonthlyPayment);
      document.getElementById('total-additional-cost').textContent = formatCurrency(totalAdditionalCost);

      document.getElementById('loan-postponement-result').classList.remove('hidden');
    } catch (error) {
      alert('An error occurred while calculating. Please check your inputs and try again.');
      console.error('Loan postponement calculation error:', error);
    }
  }

  // 6. Inflation Calculator
  function calculateInflation() {
    try {
      const amount = parseFloat(document.getElementById('inflation-amount').value) || 0;
      const startYear = parseInt(document.getElementById('starting-year').value) || 2000;
      const endYear = parseInt(document.getElementById('ending-year').value) || 2025;
      const inflationRate = parseFloat(document.getElementById('inflation-rate').value) || 2.5;

      if (!validateInput(amount, 'dollar amount', 0.01)) return;
      if (!validateInput(startYear, 'starting year', 1914, 2025)) return;
      if (!validateInput(endYear, 'ending year', startYear, 2050)) return;
      if (!validateInput(inflationRate, 'inflation rate', 0, 20)) return;

      const years = endYear - startYear;
      const currentValue = amount * Math.pow(1 + (inflationRate / 100), years);
      const purchasingPowerLost = currentValue - amount;
      const totalInflation = ((currentValue - amount) / amount) * 100;
      const averageInflation = inflationRate; // Using input rate as average

      document.getElementById('current-value').textContent = formatCurrency(currentValue);
      document.getElementById('purchasing-power-lost').textContent = formatCurrency(purchasingPowerLost);
      document.getElementById('total-inflation').textContent = formatPercentage(totalInflation);
      document.getElementById('average-inflation').textContent = formatPercentage(averageInflation);

      document.getElementById('inflation-result').classList.remove('hidden');
    } catch (error) {
      alert('An error occurred while calculating. Please check your inputs and try again.');
      console.error('Inflation calculation error:', error);
    }
  }

  // 7. RRSP Tax Savings Calculator
  function calculateRRSPTaxSavings() {
    try {
      const annualIncome = parseFloat(document.getElementById('rrsp-annual-income').value) || 0;
      const contributionAmount = parseFloat(document.getElementById('rrsp-contribution-amount').value) || 0;
      const province = document.getElementById('rrsp-province').value || 'BC';
      const rrspRoom = parseFloat(document.getElementById('rrsp-room').value) || 0;

      if (!validateInput(annualIncome, 'annual income', 1)) return;
      if (!validateInput(contributionAmount, 'contribution amount', 0)) return;
      if (!validateInput(rrspRoom, 'RRSP room', 0)) return;

      const maxContribution = Math.min(contributionAmount, rrspRoom, annualIncome * 0.18);
      const taxesWithoutRRSP = calculateTax(annualIncome, province);
      const taxesWithRRSP = calculateTax(annualIncome - maxContribution, province);
      const immediateTaxSavings = taxesWithoutRRSP.total - taxesWithRRSP.total;
      const newMarginalRate = getMarginalTaxRate(annualIncome - maxContribution, province);
      const optimalContribution = Math.min(rrspRoom, annualIncome * 0.18);
      const remainingRoom = Math.max(0, rrspRoom - maxContribution);
      const effectiveTaxRate = (taxesWithRRSP.total / (annualIncome - maxContribution)) * 100;

      document.getElementById('immediate-tax-savings').textContent = formatCurrency(immediateTaxSavings);
      document.getElementById('new-marginal-rate').textContent = formatPercentage(newMarginalRate);
      document.getElementById('optimal-contribution').textContent = formatCurrency(optimalContribution);
      document.getElementById('remaining-room').textContent = formatCurrency(remainingRoom);
      document.getElementById('effective-tax-rate').textContent = formatPercentage(effectiveTaxRate);

      document.getElementById('rrsp-tax-savings-result').classList.remove('hidden');
    } catch (error) {
      alert('An error occurred while calculating. Please check your inputs and try again.');
      console.error('RRSP tax savings calculation error:', error);
    }
  }

  // Initialize calculator on page load
  document.addEventListener('DOMContentLoaded', function() {
    // Show savings calculator by default
    showCalculator('savings');

    // Add event listeners for real-time calculations
    const calculatorInputs = {
      'savings': ['savings-starting-balance', 'savings-interest-rate', 'savings-contribution', 'savings-frequency', 'savings-years', 'savings-compounding'],
      'investment-income': ['investment-amount', 'dividend-yield', 'dividend-frequency', 'capital-gains', 'tax-rate', 'province'],
      'tax-rates': ['taxable-income', 'tax-province', 'rrsp-contributions', 'other-deductions'],
      'rrsp-loan': ['rrsp-loan-amount', 'loan-interest-rate', 'loan-term-years', 'rrsp-marginal-rate', 'rrsp-return-rate'],
      'loan-postponement': ['original-loan-balance', 'postponement-interest-rate', 'original-payment', 'deferment-months', 'remaining-term'],
      'inflation': ['inflation-amount', 'starting-year', 'ending-year', 'inflation-rate'],
      'rrsp-tax-savings': ['rrsp-annual-income', 'rrsp-contribution-amount', 'rrsp-province', 'rrsp-room']
    };

    const calculatorFunctions = {
      'savings': calculateSavings,
      'investment-income': calculateInvestmentIncome,
      'tax-rates': calculateTaxes,
      'rrsp-loan': calculateRRSPLoan,
      'loan-postponement': calculateLoanPostponement,
      'inflation': calculateInflation,
      'rrsp-tax-savings': calculateRRSPTaxSavings
    };

    Object.keys(calculatorInputs).forEach(function(calculatorName) {
      const inputs = calculatorInputs[calculatorName];
      const calcFunction = calculatorFunctions[calculatorName];

      inputs.forEach(function(inputId) {
        const input = document.getElementById(inputId);
        if (input) {
          input.addEventListener('input', calcFunction);
          input.addEventListener('change', calcFunction);
          input.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
              calcFunction();
            }
          });
        }
      });
    });
  });
</script>
