---
export interface BreadcrumbItem {
  name: string;
  url?: string;
}

export interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;
---

{items && items.length > 1 && (
  <nav aria-label="Breadcrumb" class="py-4">
    <div class="container-custom mx-auto">
      <ol class="flex items-center space-x-2 text-sm">
        {items.map((item, index) => (
          <li class="flex items-center">
            {index > 0 && (
              <svg class="w-4 h-4 text-gray-500 mx-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
              </svg>
            )}
            {item.url && index !== items.length - 1 ? (
              <a 
                href={item.url} 
                class="text-gray-400 hover:text-primary-400 transition-colors duration-200"
              >
                {item.name}
              </a>
            ) : (
              <span class={index === items.length - 1 ? "text-primary-400 font-medium" : "text-gray-300"}>
                {item.name}
              </span>
            )}
          </li>
        ))}
      </ol>
      
      <!-- JSON-LD Structured Data for Breadcrumbs -->
      <script type="application/ld+json" is:inline set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": items.map((item, index) => ({
          "@type": "ListItem",
          "position": index + 1,
          "name": item.name,
          ...(item.url && { "item": item.url })
        }))
      })} />
    </div>
  </nav>
)}